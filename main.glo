προγραμμα self
σταθερες
    capacity = 128
μεταβλητες
    λογικες:     stackBool[capacity], tempBool
    ακεραιες:    stackInt[capacity], stackTopBool, stackTopInt, stackTopFloat, stackTopString, argc, i, j, k, ii, jj, kk, tempInt
    πραγματικες: stackFloat[capacity]
    χαρακτηρες:  stackString[capacity], namesBool[capacity], namesInt[capacity], namesFloat[capacity], namesString[capacity], argv[capacity], tempString
αρχη
    ! Initialize variables.
    stackTopBool <- 0   ! Stack has zero elements.
    stackTopInt <- 0    ! Stack has zero elements.
    stackTopFloat <- 0  ! Stack has zero elements.
    stackTopString <- 0 ! Stack has zero elements.
    tempBool <- ψευδης

    ! Reads arguments.
    tempBool <- αληθης
    argc <- 0
    οσο argc <= capacity και tempBool επαναλαβε
        διαβασε argv[argc + 1]
        αν argv[argc + 1] = 'τελος_προγραμματος' τοτε
            tempBool <- ψευδης
        τελος_αν
        argc <- argc + 1
    τελος_επαναληψης

    ! Run arguments.
    ! NOTE: This is just test code for now.
    ! NOTE: It just shows that it can be done.
    ! ΝΟΤΕ: Run this: "α", "<-", "4", "γραψε", "α", "α", "<-", "7", "γραψε", "α", "τελος_προγραμματος"
    i <- 1
    οσο i <= argc επαναλαβε
        αν argv[i] = '<-' τοτε
        	καλεσε toInt(argv[i-1],tempInt)
            αν tempInt = -1 τοτε
              καλεσε varStringID(argv[i - 1], tempInt)
              αν tempInt = -1 τοτε
                  stackTopString <- stackTopString + 1
                  namesString[stackTopString] <- argv[i - 1]
                  stackString[stackTopString] <- argv[i + 1]
              αλλιως
              	  καλεσε toInt(argv[i+1],tempInt)
                  stackInt[tempInt] <- tempInt
              τελος_αν
            αλλιως
              καλεσε varIntID(argv[i - 1], tempInt)
              αν tempInt = -1 τοτε
                  stackTopInt <- stackTopInt + 1
                  namesInt[stackTopInt] <- argv[i - 1]
                  καλεσε toInt(argv[i+1],tempInt)
                  stackInt[stackTopInt] <- tempInt
              αλλιως
              	  καλεσε toInt(argv[i+1],tempInt)
                  stackInt[tempInt] <- tempInt
              τελος_αν
            τελος_αν
            i <- i + 1
        αλλιως_αν argv[i] = 'γραψε' τοτε
        	καλεσε toInt(argv[i+1],tempInt)
            αν tempInt = -1 τοτε
              καλεσε varStringID(argv[i + 1], tempInt)
              αν tempInt = -1 τοτε
                  γραψε argv[i + 1]
              αλλιως
                  γραψε stackString[tempInt]
              τελος_αν
            αλλιως
              καλεσε varIntID(argv[i + 1], tempInt)
              αν tempInt = -1 τοτε
                  γραψε argv[i + 1]
              αλλιως
                  γραψε stackInt[tempInt]
              τελος_αν
            τελος_αν
            i <- i + 1
        αλλιως_αν argv[i] = 'τελος_προγραμματος' τοτε
            i <- argc
        τελος_αν
        i <- i + 1
    τελος_επαναληψης

    ! Print arguments for debuging.
    γραψε ''
    γραψε '---'
    για i απο 1 μεχρι argc
        γραψε argv[i]
    τελος_επαναληψης
    γραψε '---'
    γραψε ''
τελος_προγραμματος


!! Returns the ID of the variable.
!! The error case is ID = -1.
διαδικασια varBoolID(inName, outID)
μεταβλητες
    χαρακτηρες: inName
    ακεραιες: outID
αρχη
    outID <- -1
    ii <- 1
    οσο ii <= stackTopBool και outID = -1 επαναλαβε
        αν inName = namesBool[ii] τοτε
            outID <- ii
        τελος_αν
    τελος_επαναληψης
τελος_διαδικασιας


!! Returns the ID of the variable.
!! The error case is ID = -1.
διαδικασια varIntID(inName, outID)
μεταβλητες
    χαρακτηρες: inName
    ακεραιες: outID
αρχη
    outID <- -1
    ii <- 1
    οσο ii <= stackTopInt και outID = -1 επαναλαβε
        αν inName = namesInt[ii] τοτε
            outID <- ii
        τελος_αν
    τελος_επαναληψης
τελος_διαδικασιας


!! Returns the ID of the variable.
!! The error case is ID = -1.
διαδικασια varFloatID(inName, outID)
μεταβλητες
    χαρακτηρες: inName
    ακεραιες: outID
αρχη
    outID <- -1
    ii <- 1
    οσο ii <= stackTopFloat και outID = -1 επαναλαβε
        αν inName = namesFloat[ii] τοτε
            outID <- ii
        τελος_αν
    τελος_επαναληψης
τελος_διαδικασιας


!! Returns the ID of the variable.
!! The error case is ID = -1.
διαδικασια varStringID(inName, outID)
μεταβλητες
    χαρακτηρες: inName
    ακεραιες: outID
αρχη
    outID <- -1
    ii <- 1
    οσο ii <= stackTopString και outID = -1 επαναλαβε
        αν inName = namesString[ii] τοτε
            outID <- ii
        τελος_αν
    τελος_επαναληψης
τελος_διαδικασιας

διαδικασια toInt(str,out)
μεταβλητες
    χαρακτηρες: str
    ακεραιες: out
αρχη
    επιλεξε str
        περιπτωση '0'
            out <- 0
        περιπτωση '1'
            out <- 1
        περιπτωση '2'
            out <- 2
        περιπτωση '3'
            out <- 3
        περιπτωση '4'
            out <- 4
        περιπτωση '5'
            out <- 5
        περιπτωση '6'
            out <- 6
        περιπτωση '7'
            out <- 7
        περιπτωση '8'
            out <- 8
        περιπτωση '9'
            out <- 9
        περιπτωση αλλιως
            out <- -1
    τελος_επιλογων
τελος_διαδικασιας
